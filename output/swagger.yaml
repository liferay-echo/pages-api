openapi: 3.0.1
info:
  title: Headless Delivery
  description: "A Java client JAR is available for use with the group ID 'com.liferay',\
    \ artifact ID 'com.liferay.headless.delivery.client', and version '4.0.78'."
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1.0
servers:
- url: http://localhost:8080/o/headless-delivery/
paths:
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}/rendered-page:
    get:
      tags:
      - SitePage
      description: Retrieves the rendered content of a given public page for a given
        experience.
      operationId: getSiteSitePageExperienceExperienceKeyRenderedPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: experienceKey
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /v1.0/sites/{siteId}/site-pages:
    get:
      tags:
      - SitePage
      description: Retrieves the public pages of the site
      operationId: getSiteSitePagesPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: aggregationTerms
        in: query
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/PageSitePage'
    post:
      tags:
      - SitePage
      description: Adds a new site page
      operationId: postSiteSitePage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SitePage'
          application/xml:
            schema:
              $ref: '#/components/schemas/SitePage'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/SitePage'
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}:
    get:
      tags:
      - SitePage
      description: Retrieves a specific public page of a site
      operationId: getSiteSitePage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/SitePage'
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}:
    get:
      tags:
      - SitePage
      description: Retrieves a specific public page of a site for a given experience
      operationId: getSiteSitePageExperienceExperienceKey
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: experienceKey
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/SitePage'
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/rendered-page:
    get:
      tags:
      - SitePage
      description: Retrieves the rendered content of a given public page.
      operationId: getSiteSitePageRenderedPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences:
    get:
      tags:
      - SitePage
      description: Retrieves the experiences of a given Page
      operationId: getSiteSitePagesExperiencesPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/PageSitePage'
  /v1.0/sites/{siteId}/site-pages/export-batch:
    post:
      tags:
      - SitePage
      operationId: postSiteSitePagesPageExportBatch
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: callbackURL
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: fieldNames
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v1.0/sites/{siteId}/site-pages/batch:
    post:
      tags:
      - SitePage
      operationId: postSiteSitePageBatch
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: callbackURL
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/json: {}
components:
  schemas:
    BlogPostingImage:
      type: object
      properties:
        contentUrl:
          type: string
          description: The image's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "optional field with the content of the image in Base64, can\
            \ be embedded with nestedFields"
          readOnly: true
        encodingFormat:
          type: string
          description: "The image's content type (e.g., `application/png`, etc.)."
          readOnly: true
        fileExtension:
          type: string
          description: The image's file extension.
          readOnly: true
        id:
          type: integer
          description: The image's ID.
          format: int64
          readOnly: true
        sizeInBytes:
          type: integer
          description: The image's size in bytes.
          format: int64
          readOnly: true
        title:
          type: string
          description: The image's title text.
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.BlogPostingImage
      xml:
        name: BlogPostingImage
    Facet:
      type: object
      properties:
        facetCriteria:
          type: string
        facetValues:
          type: array
          items:
            $ref: '#/components/schemas/FacetValue'
    FacetValue:
      type: object
      properties:
        numberOfOccurrences:
          type: integer
          format: int32
        term:
          type: string
    PageBlogPostingImage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/BlogPostingImage'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PostSiteBlogPostingImageRequestBody:
      type: object
      properties:
        blogPostingImage:
          $ref: '#/components/schemas/BlogPostingImage'
        file:
          type: string
          description: File
          format: binary
    MultipartBody:
      type: object
      properties:
        values:
          type: object
          additionalProperties:
            type: string
    Creator:
      type: object
      properties:
        additionalName:
          type: string
          description: "The author's additional name (e.g., middle name)."
          readOnly: true
        contentType:
          type: string
          description: The type of the content.
          readOnly: true
        familyName:
          type: string
          description: The author's surname.
          readOnly: true
        givenName:
          type: string
          description: The author's first name.
          readOnly: true
        id:
          type: integer
          description: The author's ID.
          format: int64
          readOnly: true
        image:
          type: string
          description: A relative URL to the author's profile image.
          readOnly: true
        name:
          type: string
          description: The author's full name.
          readOnly: true
        profileURL:
          type: string
          description: "A relative URL to the author's user profile. Optional field,\
            \ can be embedded with nestedFields."
          readOnly: true
        userGroupBriefs:
          type: array
          description: A list of userGroups information.
          items:
            $ref: '#/components/schemas/UserGroupBrief'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Creator
      description: The wiki page's creator.
      xml:
        name: Creator
    Rating:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        bestRating:
          type: number
          description: The best possible rating an asset can receive (normalized to
            1.0 by default).
          format: double
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The rating's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time a field of the rating changed.
          format: date-time
          readOnly: true
        id:
          type: integer
          description: The rating's ID.
          format: int64
          readOnly: true
        ratingValue:
          type: number
          description: The rating's value.
          format: double
        worstRating:
          type: number
          description: The worst possible rating an asset can receive (normalized
            to 0.0 by default).
          format: double
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Rating
      xml:
        name: Rating
    UserGroupBrief:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the user group.
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the user group.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.UserGroupBrief
      description: A list of userGroups information.
      xml:
        name: UserGroupBrief
    AggregateRating:
      type: object
      properties:
        bestRating:
          type: number
          description: The highest possible rating (by default normalized to 1.0).
          format: double
          readOnly: true
        ratingAverage:
          type: number
          description: The average rating.
          format: double
          readOnly: true
        ratingCount:
          type: integer
          description: The number of ratings.
          format: int32
          readOnly: true
        ratingValue:
          type: number
          description: The rating value.
          format: double
          readOnly: true
        worstRating:
          type: number
          description: The lowest possible rating (by default normalized to 0.0).
          format: double
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.AggregateRating
      description: The blog post's average rating.
      xml:
        name: AggregateRating
    BlogPosting:
      required:
      - articleBody
      - headline
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        alternativeHeadline:
          type: string
          description: The blog post's subtitle.
        articleBody:
          type: string
          description: The blog post's body (content).
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the blog post.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The blog post's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The blog post's most recent modification date.
          format: date-time
          readOnly: true
        datePublished:
          type: string
          description: The blog post's publication date.
          format: date-time
        description:
          type: string
          description: The blog post's description.
        encodingFormat:
          type: string
          description: "The blog post's media format (e.g., HTML, BBCode, etc.)."
          readOnly: true
        externalReferenceCode:
          type: string
          description: The blog post's external reference code.
        friendlyUrlPath:
          type: string
          description: The blog post's relative URL.
        headline:
          type: string
          description: The blog post's main title.
        id:
          type: integer
          description: The blog post's identifier.
          format: int64
          readOnly: true
        image:
          $ref: '#/components/schemas/Image'
        keywords:
          type: array
          description: A list of keywords describing the blog post.
          items:
            type: string
            description: A list of keywords describing the blog post.
        numberOfComments:
          type: integer
          description: The number of comments this blog post has received.
          format: int32
          readOnly: true
        relatedContents:
          type: array
          description: A list of related contents to this blog post.
          items:
            $ref: '#/components/schemas/RelatedContent'
        renderedContents:
          type: array
          description: "A list of rendered blogs posts, which results from using a\
            \ display page to process the blogs post and return HTML."
          readOnly: true
          items:
            $ref: '#/components/schemas/RenderedContent'
        siteId:
          type: integer
          description: The ID of the site to which this blog post is scoped.
          format: int64
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this blog post.
          readOnly: true
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.BlogPosting
      description: "Represents a blog post. See [BlogPosting](https://www.schema.org/BlogPosting)\
        \ for more information."
      xml:
        name: BlogPosting
    CustomField:
      type: object
      properties:
        customValue:
          $ref: '#/components/schemas/CustomValue'
        dataType:
          type: string
          description: "The field type (e.g., image, text, etc.)."
          readOnly: true
        name:
          type: string
          description: The field's internal name. This is valid for comparisons and
            unique in the structured content.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CustomField
      description: A list of the custom fields associated with the wiki page.
      xml:
        name: CustomField
    CustomValue:
      type: object
      properties:
        data:
          type: object
          description: The field's content value for simple types.
        data_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized field's content values for simple types.
          description: The localized field's content values for simple types.
        geo:
          $ref: '#/components/schemas/Geo'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CustomValue
      description: The field's value.
      xml:
        name: CustomValue
    Geo:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude of a point in space.
          format: double
        longitude:
          type: number
          description: The longitude of a point in space.
          format: double
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Geo
      description: A point determined by latitude and longitude.
      xml:
        name: Geo
    Image:
      type: object
      properties:
        caption:
          type: string
          description: The text describing the image.
        contentUrl:
          type: string
          description: The image's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "optional field with the content of the image in Base64, can\
            \ be embedded with nestedFields"
          readOnly: true
        imageId:
          type: integer
          description: The image's ID. This can be used to retrieve more information
            in the `Document` API.
          format: int64
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Image
      description: The blog post's cover image.
      xml:
        name: Image
    RelatedContent:
      type: object
      properties:
        contentType:
          type: string
          description: The type of the content.
        id:
          type: integer
          description: The identifier of the resource.
          format: int64
        title:
          type: string
          description: The title of the content.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.RelatedContent
      description: A list of related contents to this wiki page.
      xml:
        name: RelatedContent
    RenderedContent:
      type: object
      properties:
        contentTemplateId:
          type: string
          description: The ID of the template or display page used to render the content.
          readOnly: true
        contentTemplateName:
          type: string
          description: The name of the template or display page used to render the
            content.
        contentTemplateName_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized names of the template or display page used
              to render the content.
          description: The localized names of the template or display page used to
            render the content.
        markedAsDefault:
          type: boolean
          description: Specifies if the template or display page are marked as default
            to display the content.
        renderedContentURL:
          type: string
          description: An absolute URL to the rendered content.
        renderedContentValue:
          type: string
          description: "Optional field with the rendered content, can be embedded\
            \ with nestedFields."
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.RenderedContent
      description: "A list of rendered content, which results from using a template\
        \ to process the content and return HTML."
      xml:
        name: RenderedContent
    TaxonomyCategoryBrief:
      type: object
      properties:
        embeddedTaxonomyCategory:
          type: object
          description: "Optional field with the embedded taxonomy category, can be\
            \ embedded with nestedFields"
          readOnly: true
        taxonomyCategoryId:
          type: integer
          description: The category's ID. This can be used to retrieve more information
            in the `TaxonomyCategory` API.
          format: int64
          readOnly: true
        taxonomyCategoryName:
          type: string
          description: The category's name.
          readOnly: true
        taxonomyCategoryName_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized category's names.
          description: The localized category's names.
          readOnly: true
        taxonomyCategoryReference:
          $ref: '#/components/schemas/TaxonomyCategoryReference'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.TaxonomyCategoryBrief
      description: The categories associated with this wiki page.
      xml:
        name: TaxonomyCategoryBrief
    TaxonomyCategoryReference:
      required:
      - externalReferenceCode
      type: object
      properties:
        externalReferenceCode:
          type: string
          description: The taxonomy category's external reference code.
        siteKey:
          type: string
          description: The key of the site or asset library where the taxonomy category
            is located. It can be left out if the taxonomy category is in the same
            site as the page.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.TaxonomyCategoryReference
      description: A unique reference to a taxonomy category.
      xml:
        name: TaxonomyCategoryReference
      enum:
      - externalReferenceCode
    PageBlogPosting:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/BlogPosting'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PagePermission:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    Permission:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        roleName:
          type: string
      xml:
        name: Permission
    Comment:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The comment's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The comment's latest modification date.
          format: date-time
          readOnly: true
        externalReferenceCode:
          type: string
          description: The comment's external reference code.
        id:
          type: integer
          description: The comment's ID.
          format: int64
          readOnly: true
        numberOfComments:
          type: integer
          description: The number of child comments on this comment.
          format: int32
          readOnly: true
        parentCommentId:
          type: integer
          description: "the ID of the comment's parent, if it exists."
          format: int64
        text:
          type: string
          description: The comment's text content.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Comment
      xml:
        name: Comment
    PageComment:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    ContentElement:
      type: object
      properties:
        content:
          type: object
          description: The content's fields.
          readOnly: true
        contentType:
          type: string
          description: The content set element's type.
          readOnly: true
        id:
          type: integer
          description: The content set element's ID.
          format: int64
          readOnly: true
        title:
          type: string
          description: The content's title.
          readOnly: true
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized content's titles.
          description: The localized content's titles.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentElement
      xml:
        name: ContentElement
    PageContentElement:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentElement'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    ContentSetElement:
      type: object
      properties:
        content:
          type: object
          description: The content's fields.
          readOnly: true
        contentType:
          type: string
          description: The content set element's type.
          readOnly: true
        id:
          type: integer
          description: The content set element's ID.
          format: int64
          readOnly: true
        title:
          type: string
          description: The content's title.
          readOnly: true
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized content's titles.
          description: The localized content's titles.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentSetElement
      xml:
        name: ContentSetElement
    PageContentSetElement:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentSetElement'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    ContentStructure:
      type: object
      properties:
        assetLibraryKey:
          type: string
          description: The key of the asset library to which the content structure
            is scoped.
          readOnly: true
        availableLanguages:
          type: array
          description: The list of languages the content structure has a translation
            for.
          readOnly: true
          items:
            type: string
            description: The list of languages the content structure has a translation
              for.
        contentStructureFields:
          type: array
          description: The list of the content structure's fields.
          readOnly: true
          items:
            $ref: '#/components/schemas/ContentStructureField'
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The content structure's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time a field of the content structure changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The content structure's description.
          readOnly: true
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized content structure's description.
          description: The localized content structure's description.
          readOnly: true
        id:
          type: integer
          description: The content structure's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The content structure's name.
          readOnly: true
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized content structure's names.
          description: The localized content structure's names.
          readOnly: true
        siteId:
          type: integer
          description: The ID of the site to which the content structure is scoped.
          format: int64
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentStructure
      xml:
        name: ContentStructure
    ContentStructureField:
      type: object
      properties:
        dataType:
          type: string
          description: "The form field's type (e.g., date, geolocation, text, etc.)."
          readOnly: true
        inputControl:
          type: string
          description: "The form field's input control type (e.g., text, textarea,\
            \ select field, etc.)."
          readOnly: true
        label:
          type: string
          description: The form field's label.
          readOnly: true
        label_i18n:
          type: object
          additionalProperties:
            type: string
            description: The form field's labels.
          description: The form field's labels.
          readOnly: true
        localizable:
          type: boolean
          description: A flag that indicates whether the content is accessible in
            different languages.
          readOnly: true
        multiple:
          type: boolean
          description: A flag that indicates whether the form field can have several
            values.
          readOnly: true
        name:
          type: string
          description: The form field's name.
          readOnly: true
        nestedContentStructureFields:
          type: array
          description: The child content structure fields that depend on this form
            field.
          readOnly: true
          items:
            $ref: '#/components/schemas/ContentStructureField'
        options:
          type: array
          description: The list of different possible values.
          readOnly: true
          items:
            $ref: '#/components/schemas/Option'
        predefinedValue:
          type: string
          description: The form field's default value.
          readOnly: true
        predefinedValue_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized form field's default values.
          description: The localized form field's default values.
          readOnly: true
        repeatable:
          type: boolean
          description: A flag that indicates whether this content can be rendered
            (and answered) several times.
          readOnly: true
        required:
          type: boolean
          description: A flag that indicates whether this form field is required.
          readOnly: true
        showLabel:
          type: boolean
          description: A flag that indicates whether the structure's end target should
            render the field label.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentStructureField
      description: The list of the content structure's fields.
      xml:
        name: ContentStructureField
    Option:
      type: object
      properties:
        label:
          type: string
          description: The option's label.
        label_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized option's labels.
          description: The localized option's labels.
        value:
          type: string
          description: The internal value of the field option.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Option
      description: The list of different possible values.
      xml:
        name: Option
    PageContentStructure:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentStructure'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    ContentTemplate:
      required:
      - contentStructureId
      - name
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        assetLibraryKey:
          type: string
          description: The key of the asset library to which the content template
            is scoped.
          readOnly: true
        availableLanguages:
          type: array
          description: The list of languages the content template has a translation
            for.
          readOnly: true
          items:
            type: string
            description: The list of languages the content template has a translation
              for.
        contentStructureId:
          type: integer
          description: The ID of the `ContentStructure`.
          format: int64
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The content template's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the content template changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: the content template's description.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: the localized content template's descriptions.
          description: the localized content template's descriptions.
        id:
          type: string
          description: The content template's ID.
          readOnly: true
        name:
          type: string
          description: the content template's name.
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: the localized content template's name.
          description: the localized content template's name.
        programmingLanguage:
          type: string
          description: the content template's programming language.
        siteId:
          type: integer
          description: The ID of the site to which the content template is scoped.
          format: int64
          readOnly: true
        templateScript:
          type: string
          description: The content template's script.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentTemplate
      description: Represents a content template.
      xml:
        name: ContentTemplate
    PageContentTemplate:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContentTemplate'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    DocumentFolder:
      required:
      - name
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        assetLibraryKey:
          type: string
          description: The key of the asset library to which the folder is scoped.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the folder.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The folder's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time a field of the folder changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The folder's description.
        externalReferenceCode:
          type: string
          description: The document folder's external reference code.
        id:
          type: integer
          description: The folder's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The folder's main title/name.
        numberOfDocumentFolders:
          type: integer
          description: The number of this folder's child folders.
          format: int32
          readOnly: true
        numberOfDocuments:
          type: integer
          description: The number of documents in this folder.
          format: int32
          readOnly: true
        parentDocumentFolderId:
          type: integer
          description: "The ID of the folder's parent, if it exists."
          format: int64
        siteId:
          type: integer
          description: The ID of the site to which this folder is scoped.
          format: int64
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this folder.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.DocumentFolder
      description: Represents a document folder that can contain documents and other
        folders.
      xml:
        name: DocumentFolder
    PageDocumentFolder:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/DocumentFolder'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    AdaptedImage:
      type: object
      properties:
        contentUrl:
          type: string
          description: The image's relative URL.
        contentValue:
          type: string
          description: "Optional field with the content of the image in Base64, can\
            \ be embedded with nestedFields."
          readOnly: true
        height:
          type: integer
          description: The image's height in pixels.
          format: int32
        resolutionName:
          type: string
          description: The name of the image's Adaptive Media image resolution.
        sizeInBytes:
          type: integer
          description: The image's size in bytes.
          format: int64
        width:
          type: integer
          description: The image's width in pixels.
          format: int32
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.AdaptedImage
      description: "An array of images in several resolutions and sizes, created by\
        \ the Adaptive Media framework."
      xml:
        name: AdaptedImage
    ContentDocument:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        contentType:
          type: string
          description: The type of content.
          readOnly: true
        contentUrl:
          type: string
          description: The document's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "optional field with the content of the document in Base64,\
            \ can be embedded with nestedFields"
          readOnly: true
        description:
          type: string
          description: The document's description.
        encodingFormat:
          type: string
          description: "The document's content type (e.g., `application/pdf`, etc.)."
          readOnly: true
        fileExtension:
          type: string
          description: The document's file extension.
          readOnly: true
        id:
          type: integer
          description: The document's ID.
          format: int64
        sizeInBytes:
          type: integer
          description: The document's file size in bytes.
          format: int64
          readOnly: true
        title:
          type: string
          description: The document's title.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentDocument
      description: A content document element that stores an image file.
      xml:
        name: ContentDocument
    ContentField:
      type: object
      properties:
        contentFieldValue:
          $ref: '#/components/schemas/ContentFieldValue'
        contentFieldValue_i18n:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ContentFieldValue'
          description: The localized field's values.
        dataType:
          type: string
          description: "The field type (e.g., image, text, etc.)."
          readOnly: true
        inputControl:
          type: string
          description: "The field's control type (e.g., text, text area, etc.)."
          readOnly: true
        label:
          type: string
          description: The field's label.
          readOnly: true
        label_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized field's labels.
          description: The localized field's labels.
          readOnly: true
        name:
          type: string
          description: The field's internal name. This is valid for comparisons and
            unique in the structured content.
        nestedContentFields:
          type: array
          description: A list of child content fields that depend on this resource.
          items:
            $ref: '#/components/schemas/ContentField'
        repeatable:
          type: boolean
          description: A flag that indicates whether this field can be rendered multiple
            times.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentField
      description: The list of fields that store the structured content's information.
      xml:
        name: ContentField
    ContentFieldValue:
      type: object
      properties:
        data:
          type: string
          description: The field's content for simple types.
        document:
          $ref: '#/components/schemas/ContentDocument'
        geo:
          $ref: '#/components/schemas/Geo'
        image:
          $ref: '#/components/schemas/ContentDocument'
        link:
          type: string
          description: A link to a page on the server.
        structuredContentLink:
          $ref: '#/components/schemas/StructuredContentLink'
        value:
          type: string
          description: The field's visible value
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentFieldValue
      description: The localized field's values.
      xml:
        name: ContentFieldValue
    Document:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        adaptedImages:
          type: array
          description: "An array of images in several resolutions and sizes, created\
            \ by the Adaptive Media framework."
          readOnly: true
          items:
            $ref: '#/components/schemas/AdaptedImage'
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        assetLibraryKey:
          type: string
          description: The key of the asset library to which the document is scoped.
          readOnly: true
        contentUrl:
          type: string
          description: The document's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "The optional field with the content of the document in Base64,\
            \ can be embedded with nestedFields."
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the document.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The document's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time a field of the document changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The document's description.
        documentFolderId:
          type: integer
          description: The ID of the `DocumentFolder` where this document is stored.
          format: int64
        documentType:
          $ref: '#/components/schemas/DocumentType'
        encodingFormat:
          type: string
          description: "The document's content type (e.g., `application/pdf`, etc.)."
          readOnly: true
        externalReferenceCode:
          type: string
          description: The document's external reference code.
        fileExtension:
          type: string
          description: The document's file extension.
          readOnly: true
        fileName:
          type: string
          description: The document's file name.
        friendlyUrlPath:
          type: string
          description: The document's file relative URL.
        id:
          type: integer
          description: The document's ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the document.
          items:
            type: string
            description: A list of keywords describing the document.
        numberOfComments:
          type: integer
          description: The number of comments on the document.
          format: int32
          readOnly: true
        relatedContents:
          type: array
          description: A list of related contents to this document.
          readOnly: true
          items:
            $ref: '#/components/schemas/RelatedContent'
        renderedContents:
          type: array
          description: "A list of rendered documents, which results from using a display\
            \ page to process the document and return HTML."
          readOnly: true
          items:
            $ref: '#/components/schemas/RenderedContent'
        siteId:
          type: integer
          description: The ID of the site to which this document is scoped.
          format: int64
          readOnly: true
        sizeInBytes:
          type: integer
          description: The document's size in bytes.
          format: int64
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this document.
          readOnly: true
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        title:
          type: string
          description: The document's main title/name.
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Document
      xml:
        name: Document
    DocumentType:
      type: object
      properties:
        availableLanguages:
          type: array
          description: The list of languages the document type has a translation for.
          readOnly: true
          items:
            type: string
            description: The list of languages the document type has a translation
              for.
        contentFields:
          type: array
          description: The list of content fields the document type has.
          items:
            $ref: '#/components/schemas/ContentField'
        description:
          type: string
          description: The document type's description.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized document type's description.
          description: The localized document type's description.
          readOnly: true
        name:
          type: string
          description: The document type's name.
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized document type's name.
          description: The localized document type's name.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.DocumentType
      xml:
        name: DocumentType
    PostSiteDocumentRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    StructuredContent:
      required:
      - contentStructureId
      - title
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        assetLibraryKey:
          type: string
          description: The key of the asset library to which the structure content
            is scoped.
          readOnly: true
        availableLanguages:
          type: array
          description: The list of languages the structured content has a translation
            for.
          readOnly: true
          items:
            type: string
            description: The list of languages the structured content has a translation
              for.
        contentFields:
          type: array
          description: The list of fields that store the structured content's information.
          items:
            $ref: '#/components/schemas/ContentField'
        contentStructureId:
          type: integer
          description: The ID of the `ContentStructure`.
          format: int64
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the structured
            content.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The structured content's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any field of the structured content was changed.
          format: date-time
          readOnly: true
        datePublished:
          type: string
          description: The structured content's most recent publication date.
          format: date-time
        description:
          type: string
          description: The structured content's description.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized structured content's descriptions.
          description: The localized structured content's descriptions.
        externalReferenceCode:
          type: string
          description: The structured content's external reference code.
        friendlyUrlPath:
          type: string
          description: A relative URL to the structured content's rendered content.
        friendlyUrlPath_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized relative URLs to the structured content's rendered
              content.
          description: The localized relative URLs to the structured content's rendered
            content.
        id:
          type: integer
          description: The structured content's ID.
          format: int64
          readOnly: true
        key:
          type: string
          description: "An identifier, independent of the database, that can be used\
            \ to reference the structured content."
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the structured content.
          items:
            type: string
            description: A list of keywords describing the structured content.
        numberOfComments:
          type: integer
          description: The number of comments the structured content has received.
          format: int32
          readOnly: true
        permissions:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/Permission'
        priority:
          type: number
          description: The structured content's priority.
          format: double
        relatedContents:
          type: array
          description: A list of related contents to this structured content.
          items:
            $ref: '#/components/schemas/RelatedContent'
        renderedContents:
          type: array
          description: "A list of rendered content, which results from using a template\
            \ to process the content and return HTML."
          readOnly: true
          items:
            $ref: '#/components/schemas/RenderedContent'
        siteId:
          type: integer
          description: The ID of the site to which this structured content is scoped.
          format: int64
          readOnly: true
        structuredContentFolderId:
          type: integer
          description: The ID of the folder where structured content is stored.
          format: int64
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this structured content.
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this structured content.
          readOnly: true
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        title:
          type: string
          description: The structured content's main title.
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized structured content's main titles.
          description: The localized structured content's main titles.
        uuid:
          type: string
          description: A valid external identifier to reference this structured content.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.StructuredContent
      description: Represents content that has fields and is rendered by a template
        backed by a `ContentStructure`. This is modeled internally as a `JournalArticle`.
      xml:
        name: StructuredContent
    StructuredContentLink:
      type: object
      properties:
        contentType:
          type: string
          description: The type of content.
          readOnly: true
        embeddedStructuredContent:
          $ref: '#/components/schemas/StructuredContent'
        id:
          type: integer
          description: The resource's ID.
          format: int64
        title:
          type: string
          description: The resource's title.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.StructuredContentLink
      description: A link to structured content on the server.
      xml:
        name: StructuredContentLink
    PatchDocumentRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    PutDocumentRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    PageDocument:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Document'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PostAssetLibraryDocumentRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    PutAssetLibraryDocumentByExternalReferenceCodeRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    PostDocumentFolderDocumentRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    PutSiteDocumentByExternalReferenceCodeRequestBody:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/Document'
        file:
          type: string
          description: File
          format: binary
    KnowledgeBaseArticle:
      required:
      - articleBody
      - title
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        articleBody:
          type: string
          description: The article's main content.
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the article.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the article was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the article's content or metadata changed.
          format: date-time
          readOnly: true
        datePublished:
          type: string
          description: The article's scheduled publication date.
          format: date-time
        description:
          type: string
          description: The article's description.
        encodingFormat:
          type: string
          description: "The article's media type (e.g., HTML, BBCode, etc.)."
          readOnly: true
        externalReferenceCode:
          type: string
          description: The article's external reference code.
        friendlyUrlPath:
          type: string
          description: The article's relative URL.
        id:
          type: integer
          description: The article's ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the article.
          items:
            type: string
            description: A list of keywords describing the article.
        numberOfAttachments:
          type: integer
          description: The article's number attachments.
          format: int32
          readOnly: true
        numberOfKnowledgeBaseArticles:
          type: integer
          description: The number of this article's child articles.
          format: int32
          readOnly: true
        parentKnowledgeBaseArticleId:
          type: integer
          description: "The ID of the article's parent, if it exists."
          format: int64
        parentKnowledgeBaseFolder:
          $ref: '#/components/schemas/ParentKnowledgeBaseFolder'
        parentKnowledgeBaseFolderId:
          type: integer
          format: int64
          writeOnly: true
        relatedContents:
          type: array
          description: A list of related contents to this article.
          readOnly: true
          items:
            $ref: '#/components/schemas/RelatedContent'
        siteId:
          type: integer
          description: The ID of the site to which this article is scoped.
          format: int64
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this article.
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this article.
          readOnly: true
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        title:
          type: string
          description: The article's main title.
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.KnowledgeBaseArticle
      description: "Represents a Knowledge Base article (`KBArticle`), the main entity\
        \ in the Knowledge Base API."
      xml:
        name: KnowledgeBaseArticle
    ParentKnowledgeBaseFolder:
      type: object
      properties:
        folderId:
          type: integer
          description: The parent folder's ID.
          format: int64
        folderName:
          type: string
          description: The parent folder's name.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ParentKnowledgeBaseFolder
      description: "The folder's parent Knowledge Base folder, if it exists."
      xml:
        name: ParentKnowledgeBaseFolder
    PageKnowledgeBaseArticle:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseArticle'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    KnowledgeBaseAttachment:
      type: object
      properties:
        contentUrl:
          type: string
          description: The file's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "optional field with the content of the document in Base64,\
            \ can be embedded with nestedFields"
          readOnly: true
        encodingFormat:
          type: string
          description: "The file's media type (e.g., application/pdf, etc.)."
          readOnly: true
        externalReferenceCode:
          type: string
          description: The attachment's external reference code.
        fileExtension:
          type: string
          description: The file's extension.
          readOnly: true
        id:
          type: integer
          description: The file's ID.
          format: int64
          readOnly: true
        sizeInBytes:
          type: integer
          description: The file's size in bytes.
          format: int64
          readOnly: true
        title:
          type: string
          description: The file's main title.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.KnowledgeBaseAttachment
      xml:
        name: KnowledgeBaseAttachment
    PageKnowledgeBaseAttachment:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseAttachment'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PostKnowledgeBaseArticleKnowledgeBaseAttachmentRequestBody:
      type: object
      properties:
        file:
          type: string
          description: File
          format: binary
        knowledgeBaseAttachment:
          $ref: '#/components/schemas/KnowledgeBaseAttachment'
    KnowledgeBaseFolder:
      required:
      - name
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the folder.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the folder was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the folder was modified.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The folder's description.
        externalReferenceCode:
          type: string
          description: The folder's external reference code.
        id:
          type: integer
          description: The folder's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The folder's main title/name.
        numberOfKnowledgeBaseArticles:
          type: integer
          description: The number of Knowledge Base articles in this folder.
          format: int32
          readOnly: true
        numberOfKnowledgeBaseFolders:
          type: integer
          description: The number of Knowledge Base folders in this folder.
          format: int32
          readOnly: true
        parentKnowledgeBaseFolder:
          $ref: '#/components/schemas/ParentKnowledgeBaseFolder'
        parentKnowledgeBaseFolderId:
          type: integer
          format: int64
          writeOnly: true
        siteId:
          type: integer
          description: The ID of the site to which this folder is scoped.
          format: int64
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.KnowledgeBaseFolder
      description: Represents a folder for organizing Knowledge Base articles.
      xml:
        name: KnowledgeBaseFolder
    PageKnowledgeBaseFolder:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/KnowledgeBaseFolder'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    Language:
      type: object
      properties:
        countryName:
          type: string
          description: The language's contry name.
        countryName_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized language's country name values.
          description: The localized language's country name values.
        id:
          type: string
          description: The language's ID.
        markedAsDefault:
          type: boolean
          description: A flag that indicates whether the language has benn marked
            as default language.
        name:
          type: string
          description: The language's name.
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized language's name values.
          description: The localized language's name values.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Language
      xml:
        name: Language
    PageLanguage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    MessageBoardAttachment:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        contentUrl:
          type: string
          description: The file's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "optional field with the content of the document in Base64,\
            \ can be embedded with nestedFields"
          readOnly: true
        encodingFormat:
          type: string
          description: "The file's media format (e.g., application/pdf, etc.)."
          readOnly: true
        externalReferenceCode:
          type: string
          description: The message board's external reference code.
        fileExtension:
          type: string
          description: The file's extension.
          readOnly: true
        id:
          type: integer
          description: The file's ID.
          format: int64
          readOnly: true
        sizeInBytes:
          type: integer
          description: The file's size in bytes.
          format: int64
          readOnly: true
        title:
          type: string
          description: The file's title.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.MessageBoardAttachment
      xml:
        name: MessageBoardAttachment
    PageMessageBoardAttachment:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/MessageBoardAttachment'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PostMessageBoardMessageMessageBoardAttachmentRequestBody:
      type: object
      properties:
        MessageBoardAttachment:
          $ref: '#/components/schemas/MessageBoardAttachment'
        file:
          type: string
          description: File
          format: binary
    PostMessageBoardThreadMessageBoardAttachmentRequestBody:
      type: object
      properties:
        file:
          type: string
          description: File
          format: binary
        messageBoardAttachment:
          $ref: '#/components/schemas/MessageBoardAttachment'
    CreatorStatistics:
      type: object
      properties:
        joinDate:
          type: string
          description: Join date of the author.
          format: date-time
          readOnly: true
        lastPostDate:
          type: string
          description: Last post created by the author.
          format: date-time
          readOnly: true
        postsNumber:
          type: integer
          description: Number of posts publicated by the author.
          format: int32
          readOnly: true
        rank:
          type: string
          description: The rank of the author.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CreatorStatistics
      description: "The thread's creator statistics (rank, join date, number of posts,\
        \ ...)"
      xml:
        name: CreatorStatistics
    MessageBoardMessage:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        anonymous:
          type: boolean
          description: A flag that indicates whether the message's author is anonymous.
        articleBody:
          type: string
          description: The message's main content.
        creator:
          $ref: '#/components/schemas/Creator'
        creatorStatistics:
          $ref: '#/components/schemas/CreatorStatistics'
        customFields:
          type: array
          description: A list of the custom fields associated with the blog post.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the message was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the content or metadata of the message was changed.
          format: date-time
          readOnly: true
        encodingFormat:
          type: string
          description: "The message's media format (e.g., HTML, BBCode, etc.)."
        externalReferenceCode:
          type: string
          description: The message's external reference code.
        friendlyUrlPath:
          type: string
        hasCompanyMx:
          type: boolean
        headline:
          type: string
          description: The message's main title.
        id:
          type: integer
          description: The message's ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the message.
          items:
            type: string
            description: A list of keywords describing the message.
        messageBoardSectionId:
          type: integer
          description: The ID of the Message Board Section to which this message is
            scoped.
          format: int64
        messageBoardThreadId:
          type: integer
          description: The ID of the Message Board Thread to which this message is
            scoped.
          format: int64
          readOnly: true
        modified:
          type: boolean
        numberOfMessageBoardAttachments:
          type: integer
          description: The number of the message's attachments.
          format: int32
          readOnly: true
        numberOfMessageBoardMessages:
          type: integer
          description: The number of the message's child messages.
          format: int32
          readOnly: true
        parentMessageBoardMessageId:
          type: integer
          description: "The ID of the message's parent, if it exists."
          format: int64
        relatedContents:
          type: array
          description: A list of related contents to this message.
          readOnly: true
          items:
            $ref: '#/components/schemas/RelatedContent'
        showAsAnswer:
          type: boolean
          description: A flag that indicates whether the message is answering a question.
        siteId:
          type: integer
          description: The ID of the site to which this message is scoped.
          format: int64
          readOnly: true
        status:
          type: string
          description: The message's status.
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this message.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.MessageBoardMessage
      xml:
        name: MessageBoardMessage
    PageMessageBoardMessage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/MessageBoardMessage'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    MessageBoardSection:
      required:
      - title
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the section.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the section was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the section was changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The section's description.
        friendlyUrlPath:
          type: string
        id:
          type: integer
          description: The section's ID.
          format: int64
          readOnly: true
        numberOfMessageBoardSections:
          type: integer
          description: The number of this section's child sections.
          format: int32
          readOnly: true
        numberOfMessageBoardThreads:
          type: integer
          description: The number of message board threads in this section.
          format: int32
          readOnly: true
        parentMessageBoardSectionId:
          type: integer
          description: "The ID of the section parent's, if it exists."
          format: int64
        siteId:
          type: integer
          description: The ID of the site to which this section is scoped.
          format: int64
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this section.
          readOnly: true
        title:
          type: string
          description: The section's main title.
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.MessageBoardSection
      description: "Represents a section/folder on a message board, used to organize\
        \ messages."
      xml:
        name: MessageBoardSection
    PageMessageBoardSection:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/MessageBoardSection'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    MessageBoardThread:
      required:
      - headline
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        articleBody:
          type: string
          description: The thread's main body content (the message written as the
            thread's description).
        creator:
          $ref: '#/components/schemas/Creator'
        creatorStatistics:
          $ref: '#/components/schemas/CreatorStatistics'
        customFields:
          type: array
          description: A list of the custom fields associated with the thread.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the thread was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any field of the thread changed.
          format: date-time
          readOnly: true
        encodingFormat:
          type: string
          description: "The media format of the thread's content (e.g., HTML, BBCode,\
            \ etc.)."
        friendlyUrlPath:
          type: string
        hasValidAnswer:
          type: boolean
          description: A flag that indicates whether this thread has a message considered
            as valid
        headline:
          type: string
          description: The thread's main title.
        id:
          type: integer
          description: The thread's ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the thread.
          items:
            type: string
            description: A list of keywords describing the thread.
        lastPostDate:
          type: string
          format: date-time
          readOnly: true
        locked:
          type: boolean
          description: A flag that indicates whether this thread is locked.
          readOnly: true
        messageBoardRootMessageId:
          type: integer
          description: The ID of the thread's message.
          format: int64
          readOnly: true
        messageBoardSectionId:
          type: integer
          description: The ID of the Message Board Section to which this message is
            scoped.
          format: int64
        numberOfMessageBoardAttachments:
          type: integer
          description: The number of the thread's attachments.
          format: int32
          readOnly: true
        numberOfMessageBoardMessages:
          type: integer
          description: The number of the thread's messages.
          format: int32
          readOnly: true
        relatedContents:
          type: array
          description: A list of related contents to this thread.
          readOnly: true
          items:
            $ref: '#/components/schemas/RelatedContent'
        seen:
          type: boolean
          description: A flag that indicates whether this thread has been seen.
        showAsQuestion:
          type: boolean
          description: A flag that indicates whether this thread was posted as a question
            that can receive approved answers.
        siteId:
          type: integer
          description: The ID of the site to which this thread is scoped.
          format: int64
          readOnly: true
        status:
          type: string
          description: The thread's status.
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this thread.
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this thread.
          readOnly: true
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        threadType:
          type: string
          description: The thread's type.
        viewCount:
          type: integer
          description: The number of views of this thread.
          format: int64
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.MessageBoardThread
      description: Represents a discussion thread in a message board.
      xml:
        name: MessageBoardThread
    PageMessageBoardThread:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/MessageBoardThread'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    NavigationMenu:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The navigation menu's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the navigation menu changed.
          format: date-time
          readOnly: true
        id:
          type: integer
          description: The navigation menu's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The navigation menu's name.
        navigationMenuItems:
          type: array
          description: The list of navigation menu items this navigation menu has.
          items:
            $ref: '#/components/schemas/NavigationMenuItem'
        siteId:
          type: integer
          description: The ID of the site to which this navigation menu is scoped.
          format: int64
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.NavigationMenu
        navigationType:
          type: string
          description: "The navigation menu's type (primary, secondary, social)."
          enum:
          - Primary
          - Secondary
          - Social
      xml:
        name: NavigationMenu
    NavigationMenuItem:
      type: object
      properties:
        availableLanguages:
          type: array
          description: The list of languages the navigation menu item has a translation
            for.
          readOnly: true
          items:
            type: string
            description: The list of languages the navigation menu item has a translation
              for.
        contentURL:
          type: string
          description: The navigation menu item's content API REST URL.
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The navigation menu item's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time the navigation menu item changed.
          format: date-time
          readOnly: true
        id:
          type: integer
          description: The navigation menu item's ID.
          format: int64
        link:
          type: string
          description: The link to a page on the server.
        link_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized links to a page on the server.
          description: The localized links to a page on the server.
        name:
          type: string
          description: The navigation menu item's name.
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized navigation menu item's names.
          description: The localized navigation menu item's names.
        navigationMenuItems:
          type: array
          description: The navigation menu items this navigation menu item has.
          items:
            $ref: '#/components/schemas/NavigationMenuItem'
        parentNavigationMenuId:
          type: integer
          description: The ID of the navigation menu item's parent.
          format: int64
          readOnly: true
        sitePageURL:
          type: string
          description: The navigation menu item's linked site page URL.
          readOnly: true
        type:
          type: string
          description: The navigation menu item's type.
          readOnly: true
        url:
          type: string
          description: The navigation menu item's linked URL.
        useCustomName:
          type: boolean
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.NavigationMenuItem
      description: The list of navigation menu items this navigation menu has.
      xml:
        name: NavigationMenuItem
    PageNavigationMenu:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/NavigationMenu'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    ClientExtension:
      type: object
      properties:
        clientExtensionConfig:
          type: object
          additionalProperties:
            type: string
        externalReferenceCode:
          type: string
          description: The client extension's external reference code.
        name:
          type: string
          description: The client extension's name.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ClientExtension
      description: The Client Extension for the theme spritemap of a page
      xml:
        name: ClientExtension
    CustomMetaTag:
      type: object
      properties:
        key:
          type: string
          description: The custom metatag's key.
        value:
          type: string
          description: The custom metatag's value
        value_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized custom metatag's values.
          description: The localized custom metatag's values.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CustomMetaTag
      description: A list of custom metatags this page has.
      xml:
        name: CustomMetaTag
    Experience:
      type: object
      properties:
        key:
          type: string
          description: the experience's key.
        name:
          type: string
          description: the experience's name.
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: the localized experience's names.
          description: the localized experience's names.
        segments:
          type: array
          description: A list of segments the experience is used for.
          items:
            $ref: '#/components/schemas/Segment'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Experience
      description: Experience of the page that it's being retrieved.
      xml:
        name: Experience
    MasterPage:
      type: object
      properties:
        key:
          type: string
          description: The master page's key.
        name:
          type: string
          description: The master page's name.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.MasterPage
      description: The page's master page.
      xml:
        name: MasterPage
    OpenGraphSettings:
      type: object
      properties:
        description:
          type: string
          description: The Open Graph's description.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized Open Graph's descriptions.
          description: The localized Open Graph's descriptions.
        image:
          $ref: '#/components/schemas/ContentDocument'
        imageAlt:
          type: string
          description: The Open Graph's image alt.
        imageAlt_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized Open Graph's image alts.
          description: The localized Open Graph's image alts.
        title:
          type: string
          description: The Open Graph's title.
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized Open Graph's titles.
          description: The localized Open Graph's titles.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.OpenGraphSettings
      description: The page's Open Graph settings.
      xml:
        name: OpenGraphSettings
    PageDefinition:
      type: object
      properties:
        pageElement:
          $ref: '#/components/schemas/PageElement'
        pageRules:
          type: array
          description: A list of the page rules this page has.
          items:
            $ref: '#/components/schemas/PageRule'
        settings:
          $ref: '#/components/schemas/Settings'
        version:
          type: number
          description: The version of the JSON generated by page definition.
          format: double
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageDefinition
      description: "Optional field with the structure of all the elements of the page.\
        \ Can be embedded with nestedFields when retrieving the collection of site\
        \ pages. When retrieving a single site page, it will automatically be included."
      xml:
        name: PageDefinition
    PageElement:
      type: object
      properties:
        definition:
          type: object
          description: The page element's definition.
        id:
          type: string
          description: The page element's ID.
        pageElements:
          type: array
          description: A list of the page elements this page element has.
          items:
            $ref: '#/components/schemas/PageElement'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageElement
        type:
          type: string
          description: "The page element's type (collection, collection item, column,\
            \ drop zone, form, fragment, fragment drop zone, root, row, section or\
            \ widget)."
          enum:
          - Collection
          - CollectionItem
          - Column
          - DropZone
          - Form
          - Fragment
          - FragmentDropZone
          - Root
          - Row
          - Section
          - Widget
      description: The page's page element.
      xml:
        name: PageElement
    PageRule:
      type: object
      properties:
        id:
          type: string
          description: The page rule ID.
        name:
          type: string
          description: The custom name of a Page rule.
        pageRuleActions:
          type: array
          description: A list of actions of a Page rule.
          items:
            $ref: '#/components/schemas/PageRuleAction'
        pageRuleConditions:
          type: array
          description: A list of conditions of a Page rule.
          items:
            $ref: '#/components/schemas/PageRuleCondition'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageRule
        conditionType:
          type: string
          description: The custom name of a Page rule.
          enum:
          - All
          - Any
      description: A list of the page rules this page has.
      xml:
        name: PageRule
    PageRuleAction:
      type: object
      properties:
        action:
          type: string
          description: The page rule action's action.
        id:
          type: string
          description: The page rule action's ID.
        itemId:
          type: string
          description: The page rule condition's item ID.
        type:
          type: string
          description: The page rule action's type.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageRuleAction
      description: A list of actions of a Page rule.
      xml:
        name: PageRuleAction
    PageRuleCondition:
      type: object
      properties:
        condition:
          type: string
          description: The page rule condition's description.
        id:
          type: string
          description: The page rule condition's ID.
        type:
          type: string
          description: The page rule condition's type.
        value:
          type: string
          description: The page rule condition's value.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageRuleCondition
      description: A list of conditions of a Page rule.
      xml:
        name: PageRuleCondition
    PageSettings:
      type: object
      properties:
        customMetaTags:
          type: array
          description: A list of custom metatags this page has.
          items:
            $ref: '#/components/schemas/CustomMetaTag'
        hiddenFromNavigation:
          type: boolean
          description: A flag that indicates whether the page is hidden from navigation.
        openGraphSettings:
          $ref: '#/components/schemas/OpenGraphSettings'
        seoSettings:
          $ref: '#/components/schemas/SEOSettings'
        sitePageNavigationMenuSettings:
          $ref: '#/components/schemas/SitePageNavigationMenuSettings'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageSettings
      description: "Settings of the page, such as SEO or OpenGraph."
      xml:
        name: PageSettings
    ParentSitePage:
      type: object
      properties:
        friendlyUrlPath:
          type: string
          description: The relative URL of the parent page.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ParentSitePage
      description: The parent page or null if it is a top level page.
      xml:
        name: ParentSitePage
    RenderedPage:
      type: object
      properties:
        masterPageId:
          type: string
          description: The ID of the master page used to render the content.
          readOnly: true
        masterPageName:
          type: string
          description: The name of the master page used to render the content.
        pageTemplateId:
          type: string
          description: The ID of the template used to render the content.
          readOnly: true
        pageTemplateName:
          type: string
          description: The name of the template used to render the content.
        renderedPageURL:
          type: string
          description: An absolute URL to the rendered page.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.RenderedPage
      description: Metadata of the page such as it's master page and template.
      xml:
        name: RenderedPage
    SEOSettings:
      type: object
      properties:
        customCanonicalURL:
          type: string
          description: "The canonical URL of the page, if it exists."
        customCanonicalURL_i18n:
          type: object
          additionalProperties:
            type: string
            description: "The localized canonical URL of the page, if it exists."
          description: "The localized canonical URL of the page, if it exists."
        description:
          type: string
          description: The page's description to be used as summary for search engines.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized descriptions of the page to be used as summary
              for search engines.
          description: The localized descriptions of the page to be used as summary
            for search engines.
        htmlTitle:
          type: string
          description: The page's main title to be used by search engines.
        htmlTitle_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized main titles of the page to be used by search
              engines.
          description: The localized main titles of the page to be used by search
            engines.
        robots:
          type: string
          description: A tag telling search engines if and how they should crawl the
            page.
        robots_i18n:
          type: object
          additionalProperties:
            type: string
            description: A localized tag telling search engines if and how they should
              crawl the page.
          description: A localized tag telling search engines if and how they should
            crawl the page.
        seoKeywords:
          type: string
          description: A list of target keywords of the page to be used by search
            engines.
        seoKeywords_i18n:
          type: object
          additionalProperties:
            type: string
            description: A list of localized target keywords of the page to be used
              by search engines.
          description: A list of localized target keywords of the page to be used
            by search engines.
        siteMapSettings:
          $ref: '#/components/schemas/SiteMapSettings'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SEOSettings
      description: The page's SEO settings.
      xml:
        name: SEOSettings
    Segment:
      required:
      - criteria
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A flag that indicates whether the segment is active.
          readOnly: true
        criteria:
          type: string
          description: The segment's criteria.
          readOnly: true
        criteriaValue:
          type: object
          additionalProperties:
            type: object
            description: The segment's criteria in JSON.
          description: The segment's criteria in JSON.
          readOnly: true
        dateCreated:
          type: string
          description: The segment's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The segment's most recent modification date.
          format: date-time
          readOnly: true
        id:
          type: integer
          description: The segment's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The segment's name.
          readOnly: true
        siteId:
          type: integer
          description: The ID of the segment's site.
          format: int64
          readOnly: true
        source:
          type: string
          description: The segment's source.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.admin.user.dto.v1_0.Segment
      description: Represents a set of users that meet certain criteria. Segments
        may be used to create customized experiences for users.
      xml:
        name: Segment
      enum:
      - criteria
      - name
    Settings:
      type: object
      properties:
        colorSchemeName:
          type: string
          description: The page's color scheme name.
        css:
          type: string
          description: The page's CSS.
        favIcon:
          type: object
          description: The FavIcon of the page
        globalCSSClientExtensions:
          type: array
          description: The client extensions for global css associated to the page.
          items:
            $ref: '#/components/schemas/ClientExtension'
        globalJSClientExtensions:
          type: array
          description: The client extensions for global js associated to the page.
          items:
            $ref: '#/components/schemas/ClientExtension'
        javascript:
          type: string
          description: The page's JavaScript.
        masterPage:
          $ref: '#/components/schemas/MasterPage'
        styleBook:
          $ref: '#/components/schemas/StyleBook'
        themeCSSClientExtension:
          $ref: '#/components/schemas/ClientExtension'
        themeName:
          type: string
          description: The page's theme name.
        themeSettings:
          type: object
          description: The page's theme settings.
        themeSpritemapClientExtension:
          $ref: '#/components/schemas/ClientExtension'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Settings
      description: The page's settings.
      xml:
        name: Settings
    SiteMapSettings:
      type: object
      properties:
        include:
          type: boolean
          description: Whether search engines should crawl and index the page.
        includeChildSitePages:
          type: boolean
          description: Whether search engines should crawl and index the child pages.
        pagePriority:
          maximum: 1
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: How the page should be prioritized relative to other pages.
          format: double
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SiteMapSettings
        changeFrequency:
          type: string
          description: Indicates how often a page is updated.
          enum:
          - Always
          - Hourly
          - Daily
          - Weekly
          - Monthly
          - Yearly
          - Never
      description: Represents settings related with the site map.
      xml:
        name: SiteMapSettings
    SitePage:
      required:
      - title
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        availableLanguages:
          type: array
          description: The list of languages the page has a translation for.
          readOnly: true
          items:
            type: string
            description: The list of languages the page has a translation for.
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: Custom fields associated with the page.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The page's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any field of the page was changed.
          format: date-time
          readOnly: true
        datePublished:
          type: string
          description: The page's most recent publication date.
          format: date-time
        experience:
          $ref: '#/components/schemas/Experience'
        friendlyUrlPath:
          type: string
          description: A relative URL to the page's rendered content.
        friendlyUrlPath_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized relative URLs to the page's rendered content.
          description: The localized relative URLs to the page's rendered content.
        id:
          type: integer
          description: The page ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the page.
          items:
            type: string
            description: A list of keywords describing the page.
        pageDefinition:
          $ref: '#/components/schemas/PageDefinition'
        pagePermissions:
          type: array
          description: The page's permissions.
          items:
            $ref: '#/components/schemas/PagePermission'
        pageSettings:
          $ref: '#/components/schemas/PageSettings'
        pageType:
          type: string
          description: The type of the page.
        parentSitePage:
          $ref: '#/components/schemas/ParentSitePage'
        renderedPage:
          $ref: '#/components/schemas/RenderedPage'
        siteId:
          type: integer
          description: The ID of the site to which this page is scoped.
          format: int64
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this page.
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        title:
          type: string
          description: The page's title.
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized page's titles.
          description: The localized page's titles.
        uuid:
          type: string
          description: A valid external identifier to reference this page.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SitePage
      description: Represents a site page. This is modeled internally as a `Layout`.
      xml:
        name: SitePage
    SitePageNavigationMenuSettings:
      type: object
      properties:
        queryString:
          type: string
          description: The default parameter for a page.
        target:
          type: string
          description: The page's description to be used as summary for search engines.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SitePageNavigationMenuSettings
        targetType:
          type: string
          description: The target's type (specific frame or new tab).
          enum:
          - SpecificFrame
          - NewTab
      description: The page's site navigation menu settings.
      xml:
        name: SitePageNavigationMenuSettings
    StyleBook:
      type: object
      properties:
        key:
          type: string
          description: The stylebook's key.
        name:
          type: string
          description: The stylebook's name.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.StyleBook
      description: The StyleBook that is applied to the page.
      xml:
        name: StyleBook
    PageSitePage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/SitePage'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    StructuredContentFolder:
      required:
      - name
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        assetLibraryKey:
          type: string
          description: The key of the asset library to which the folder is scoped.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the folder.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the folder was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any of the folder's fields changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The folder's description.
        externalReferenceCode:
          type: string
          description: The structured content folder's external reference code.
        id:
          type: integer
          description: The folder's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The folder's name.
        numberOfStructuredContentFolders:
          type: integer
          description: The number of structured content folders inside this folder.
          format: int32
          readOnly: true
        numberOfStructuredContents:
          type: integer
          description: The number of structured content objects inside this folder.
          format: int32
          readOnly: true
        parentStructuredContentFolderId:
          type: integer
          description: "The ID of the folder's parent, if it exists."
          format: int64
        siteId:
          type: integer
          description: The ID of the site to which this folder is scoped.
          format: int64
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this folder.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.StructuredContentFolder
      description: Represents a folder that can be used to organize structured content.
      xml:
        name: StructuredContentFolder
    PageStructuredContentFolder:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/StructuredContentFolder'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PageStructuredContent:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/StructuredContent'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    WikiNode:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        creator:
          $ref: '#/components/schemas/Creator'
        dateCreated:
          type: string
          description: The date the wiki node was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any of the wiki node's fields changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The wiki node's description.
        externalReferenceCode:
          type: string
          description: The wiki node's external reference code.
        id:
          type: integer
          description: The wiki node's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The wiki node's name.
        numberOfWikiPages:
          type: integer
          description: The number of child wiki page on this wiki node.
          format: int32
          readOnly: true
        siteId:
          type: integer
          description: The ID of the site to which this wiki node is scoped.
          format: int64
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this wiki node.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.WikiNode
      xml:
        name: WikiNode
    PageWikiNode:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/WikiNode'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    WikiPageAttachment:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        contentUrl:
          type: string
          description: The file's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "Optional field with the content of the document in Base64,\
            \ can be embedded with nestedFields."
          readOnly: true
        encodingFormat:
          type: string
          description: "The file's media format (e.g., application/pdf, etc.)."
          readOnly: true
        externalReferenceCode:
          type: string
        fileExtension:
          type: string
          description: The file's extension.
          readOnly: true
        id:
          type: integer
          description: The file's ID.
          format: int64
          readOnly: true
        sizeInBytes:
          type: integer
          description: The file's size in bytes.
          format: int64
          readOnly: true
        title:
          type: string
          description: The file's title.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.WikiPageAttachment
      xml:
        name: WikiPageAttachment
    PageWikiPageAttachment:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/WikiPageAttachment'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PostWikiPageWikiPageAttachmentRequestBody:
      type: object
      properties:
        WikiPageAttachment:
          $ref: '#/components/schemas/WikiPageAttachment'
        file:
          type: string
          description: File
          format: binary
    WikiPage:
      required:
      - encodingFormat
      - headline
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        content:
          type: string
          description: The wiki page's content.
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: A list of the custom fields associated with the wiki page.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The date the wiki page was created.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any of the wiki page's fields changed.
          format: date-time
          readOnly: true
        description:
          type: string
          description: The wiki page's description.
        encodingFormat:
          type: string
          description: "The wiki page's media format (e.g., HTML, BBCode, etc.)."
        externalReferenceCode:
          type: string
          description: The wiki page's external reference code.
        headline:
          type: string
          description: The wiki page's main title.
        id:
          type: integer
          description: The wiki page's ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the blog post.
          items:
            type: string
            description: A list of keywords describing the blog post.
        numberOfAttachments:
          type: integer
          description: The wiki page's number attachments.
          format: int32
          readOnly: true
        numberOfWikiPages:
          type: integer
          description: The number of child wiki page on this wiki page.
          format: int32
          readOnly: true
        parentWikiPageId:
          type: integer
          description: "The ID of the wiki page's parent, if it exists."
          format: int64
        relatedContents:
          type: array
          description: A list of related contents to this wiki page.
          readOnly: true
          items:
            $ref: '#/components/schemas/RelatedContent'
        siteId:
          type: integer
          description: The ID of the site to which this wiki page is scoped.
          format: int64
          readOnly: true
        subscribed:
          type: boolean
          description: A flag that indicates whether the user making the requests
            is subscribed to this wiki page.
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this wiki page.
          readOnly: true
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        wikiNodeId:
          type: integer
          description: The ID of the wiki node to which the wiki page belongs.
          format: int64
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.WikiPage
      description: Represents a wiki page.
      xml:
        name: WikiPage
    PageWikiPage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/WikiPage'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string