openapi: 3.0.1
info:
  title: Headless Delivery
  description: "A Java client JAR is available for use with the group ID 'com.liferay',\
    \ artifact ID 'com.liferay.headless.delivery.client', and version '4.0.78'."
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1.0
servers:
- url: http://localhost:8080/o/headless-delivery/
paths:
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}/rendered-page:
    get:
      tags:
      - SitePage
      description: Retrieves the rendered content of a given public page for a given
        experience.
      operationId: getSiteSitePageExperienceExperienceKeyRenderedPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: experienceKey
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /v1.0/sites/{siteId}/site-pages:
    get:
      tags:
      - SitePage
      description: Retrieves the public pages of the site
      operationId: getSiteSitePagesPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: aggregationTerms
        in: query
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/PageSitePage'
    post:
      tags:
      - SitePage
      description: Adds a new site page
      operationId: postSiteSitePage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SitePage'
          application/xml:
            schema:
              $ref: '#/components/schemas/SitePage'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/SitePage'
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}:
    get:
      tags:
      - SitePage
      description: Retrieves a specific public page of a site
      operationId: getSiteSitePage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/SitePage'
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}:
    get:
      tags:
      - SitePage
      description: Retrieves a specific public page of a site for a given experience
      operationId: getSiteSitePageExperienceExperienceKey
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: experienceKey
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/SitePage'
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/rendered-page:
    get:
      tags:
      - SitePage
      description: Retrieves the rendered content of a given public page.
      operationId: getSiteSitePageRenderedPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences:
    get:
      tags:
      - SitePage
      description: Retrieves the experiences of a given Page
      operationId: getSiteSitePagesExperiencesPage
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: friendlyUrlPath
        in: path
        required: true
        schema:
          type: string
      - name: fields
        in: query
        schema:
          type: string
      - name: nestedFields
        in: query
        schema:
          type: string
      - name: restrictFields
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageSitePage'
            application/xml:
              schema:
                $ref: '#/components/schemas/PageSitePage'
  /v1.0/sites/{siteId}/site-pages/export-batch:
    post:
      tags:
      - SitePage
      operationId: postSiteSitePagesPageExportBatch
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
      - name: search
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: callbackURL
        in: query
        schema:
          type: string
      - name: contentType
        in: query
        schema:
          type: string
      - name: fieldNames
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /v1.0/sites/{siteId}/site-pages/batch:
    post:
      tags:
      - SitePage
      operationId: postSiteSitePageBatch
      parameters:
      - name: siteId
        in: path
        required: true
        schema:
          type: string
      - name: callbackURL
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        default:
          description: default response
          content:
            application/json: {}
components:
  schemas:
    Facet:
      type: object
      properties:
        facetCriteria:
          type: string
        facetValues:
          type: array
          items:
            $ref: '#/components/schemas/FacetValue'
    FacetValue:
      type: object
      properties:
        numberOfOccurrences:
          type: integer
          format: int32
        term:
          type: string
    Creator:
      type: object
      properties:
        additionalName:
          type: string
          description: "The author's additional name (e.g., middle name)."
          readOnly: true
        contentType:
          type: string
          description: The type of the content.
          readOnly: true
        familyName:
          type: string
          description: The author's surname.
          readOnly: true
        givenName:
          type: string
          description: The author's first name.
          readOnly: true
        id:
          type: integer
          description: The author's ID.
          format: int64
          readOnly: true
        image:
          type: string
          description: A relative URL to the author's profile image.
          readOnly: true
        name:
          type: string
          description: The author's full name.
          readOnly: true
        profileURL:
          type: string
          description: "A relative URL to the author's user profile. Optional field,\
            \ can be embedded with nestedFields."
          readOnly: true
        userGroupBriefs:
          type: array
          description: A list of userGroups information.
          items:
            $ref: '#/components/schemas/UserGroupBrief'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Creator
      description: The wiki page's creator.
      xml:
        name: Creator
    UserGroupBrief:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the user group.
          format: int64
          readOnly: true
        name:
          type: string
          description: The name of the user group.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.UserGroupBrief
      description: A list of userGroups information.
      xml:
        name: UserGroupBrief
    AggregateRating:
      type: object
      properties:
        bestRating:
          type: number
          description: The highest possible rating (by default normalized to 1.0).
          format: double
          readOnly: true
        ratingAverage:
          type: number
          description: The average rating.
          format: double
          readOnly: true
        ratingCount:
          type: integer
          description: The number of ratings.
          format: int32
          readOnly: true
        ratingValue:
          type: number
          description: The rating value.
          format: double
          readOnly: true
        worstRating:
          type: number
          description: The lowest possible rating (by default normalized to 0.0).
          format: double
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.AggregateRating
      description: The blog post's average rating.
      xml:
        name: AggregateRating
    CustomField:
      type: object
      properties:
        customValue:
          $ref: '#/components/schemas/CustomValue'
        dataType:
          type: string
          description: "The field type (e.g., image, text, etc.)."
          readOnly: true
        name:
          type: string
          description: The field's internal name. This is valid for comparisons and
            unique in the structured content.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CustomField
      description: A list of the custom fields associated with the wiki page.
      xml:
        name: CustomField
    CustomValue:
      type: object
      properties:
        data:
          type: object
          description: The field's content value for simple types.
        data_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized field's content values for simple types.
          description: The localized field's content values for simple types.
        geo:
          $ref: '#/components/schemas/Geo'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CustomValue
      description: The field's value.
      xml:
        name: CustomValue
    Geo:
      type: object
      properties:
        latitude:
          type: number
          description: The latitude of a point in space.
          format: double
        longitude:
          type: number
          description: The longitude of a point in space.
          format: double
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Geo
      description: A point determined by latitude and longitude.
      xml:
        name: Geo
    TaxonomyCategoryBrief:
      type: object
      properties:
        embeddedTaxonomyCategory:
          type: object
          description: "Optional field with the embedded taxonomy category, can be\
            \ embedded with nestedFields"
          readOnly: true
        taxonomyCategoryId:
          type: integer
          description: The category's ID. This can be used to retrieve more information
            in the `TaxonomyCategory` API.
          format: int64
          readOnly: true
        taxonomyCategoryName:
          type: string
          description: The category's name.
          readOnly: true
        taxonomyCategoryName_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized category's names.
          description: The localized category's names.
          readOnly: true
        taxonomyCategoryReference:
          $ref: '#/components/schemas/TaxonomyCategoryReference'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.TaxonomyCategoryBrief
      description: The categories associated with this wiki page.
      xml:
        name: TaxonomyCategoryBrief
    TaxonomyCategoryReference:
      required:
      - externalReferenceCode
      type: object
      properties:
        externalReferenceCode:
          type: string
          description: The taxonomy category's external reference code.
        siteKey:
          type: string
          description: The key of the site or asset library where the taxonomy category
            is located. It can be left out if the taxonomy category is in the same
            site as the page.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.TaxonomyCategoryReference
      description: A unique reference to a taxonomy category.
      xml:
        name: TaxonomyCategoryReference
      enum:
      - externalReferenceCode
    PagePermission:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    Permission:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        roleName:
          type: string
      xml:
        name: Permission
    ContentDocument:
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        contentType:
          type: string
          description: The type of content.
          readOnly: true
        contentUrl:
          type: string
          description: The document's relative URL.
          readOnly: true
        contentValue:
          type: string
          description: "optional field with the content of the document in Base64,\
            \ can be embedded with nestedFields"
          readOnly: true
        description:
          type: string
          description: The document's description.
        encodingFormat:
          type: string
          description: "The document's content type (e.g., `application/pdf`, etc.)."
          readOnly: true
        fileExtension:
          type: string
          description: The document's file extension.
          readOnly: true
        id:
          type: integer
          description: The document's ID.
          format: int64
        sizeInBytes:
          type: integer
          description: The document's file size in bytes.
          format: int64
          readOnly: true
        title:
          type: string
          description: The document's title.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ContentDocument
      description: A content document element that stores an image file.
      xml:
        name: ContentDocument
    ClientExtension:
      type: object
      properties:
        clientExtensionConfig:
          type: object
          additionalProperties:
            type: string
        externalReferenceCode:
          type: string
          description: The client extension's external reference code.
        name:
          type: string
          description: The client extension's name.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ClientExtension
      description: The Client Extension for the theme spritemap of a page
      xml:
        name: ClientExtension
    CustomMetaTag:
      type: object
      properties:
        key:
          type: string
          description: The custom metatag's key.
        value:
          type: string
          description: The custom metatag's value
        value_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized custom metatag's values.
          description: The localized custom metatag's values.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.CustomMetaTag
      description: A list of custom metatags this page has.
      xml:
        name: CustomMetaTag
    Experience:
      type: object
      properties:
        key:
          type: string
          description: the experience's key.
        name:
          type: string
          description: the experience's name.
        name_i18n:
          type: object
          additionalProperties:
            type: string
            description: the localized experience's names.
          description: the localized experience's names.
        pageStructure:
          $ref: "#/components/schemas/PageStructure"
        segments:
          type: array
          description: A list of segments the experience is used for.
          items:
            $ref: '#/components/schemas/Segment'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Experience
      description: Experience of the page that it's being retrieved.
      xml:
        name: Experience
    MasterPage:
      type: object
      properties:
        key:
          type: string
          description: The master page's key.
        name:
          type: string
          description: The master page's name.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.MasterPage
      description: The page's master page.
      xml:
        name: MasterPage
    OpenGraphSettings:
      type: object
      properties:
        description:
          type: string
          description: The Open Graph's description.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized Open Graph's descriptions.
          description: The localized Open Graph's descriptions.
        image:
          $ref: '#/components/schemas/ContentDocument'
        imageAlt:
          type: string
          description: The Open Graph's image alt.
        imageAlt_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized Open Graph's image alts.
          description: The localized Open Graph's image alts.
        title:
          type: string
          description: The Open Graph's title.
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized Open Graph's titles.
          description: The localized Open Graph's titles.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.OpenGraphSettings
      description: The page's Open Graph settings.
      xml:
        name: OpenGraphSettings
    PageDefinition:
      type: object
      properties:
        pageElement:
          $ref: '#/components/schemas/PageElement'
        pageRules:
          type: array
          description: A list of the page rules this page has.
          items:
            $ref: '#/components/schemas/PageRule'
        settings:
          $ref: '#/components/schemas/Settings'
        version:
          type: number
          description: The version of the JSON generated by page definition.
          format: double
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageDefinition
      description: "Optional field with the structure of all the elements of the page.\
        \ Can be embedded with nestedFields when retrieving the collection of site\
        \ pages. When retrieving a single site page, it will automatically be included."
      xml:
        name: PageDefinition
    PageElement:
      type: object
      properties:
        definition:
          type: object
          description: The page element's definition.
        id:
          type: string
          description: The page element's ID.
        pageElements:
          type: array
          description: A list of the page elements this page element has.
          items:
            $ref: '#/components/schemas/PageElement'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageElement
        type:
          type: string
          description: "The page element's type (collection, collection item, column,\
            \ drop zone, form, fragment, fragment drop zone, root, row, section or\
            \ widget)."
          enum:
          - Collection
          - CollectionItem
          - Column
          - DropZone
          - Form
          - Fragment
          - FragmentDropZone
          - Root
          - Row
          - Section
          - Widget
      description: The page's page element.
      xml:
        name: PageElement
    PageRule:
      type: object
      properties:
        id:
          type: string
          description: The page rule ID.
        name:
          type: string
          description: The custom name of a Page rule.
        pageRuleActions:
          type: array
          description: A list of actions of a Page rule.
          items:
            $ref: '#/components/schemas/PageRuleAction'
        pageRuleConditions:
          type: array
          description: A list of conditions of a Page rule.
          items:
            $ref: '#/components/schemas/PageRuleCondition'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageRule
        conditionType:
          type: string
          description: The custom name of a Page rule.
          enum:
          - All
          - Any
      description: A list of the page rules this page has.
      xml:
        name: PageRule
    PageRuleAction:
      type: object
      properties:
        action:
          type: string
          description: The page rule action's action.
        id:
          type: string
          description: The page rule action's ID.
        itemId:
          type: string
          description: The page rule condition's item ID.
        type:
          type: string
          description: The page rule action's type.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageRuleAction
      description: A list of actions of a Page rule.
      xml:
        name: PageRuleAction
    PageRuleCondition:
      type: object
      properties:
        condition:
          type: string
          description: The page rule condition's description.
        id:
          type: string
          description: The page rule condition's ID.
        type:
          type: string
          description: The page rule condition's type.
        value:
          type: string
          description: The page rule condition's value.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageRuleCondition
      description: A list of conditions of a Page rule.
      xml:
        name: PageRuleCondition
    PageSettings:
      type: object
      properties:
        customMetaTags:
          type: array
          description: A list of custom metatags this page has.
          items:
            $ref: '#/components/schemas/CustomMetaTag'
        hiddenFromNavigation:
          type: boolean
          description: A flag that indicates whether the page is hidden from navigation.
        openGraphSettings:
          $ref: '#/components/schemas/OpenGraphSettings'
        seoSettings:
          $ref: '#/components/schemas/SEOSettings'
        sitePageNavigationMenuSettings:
          $ref: '#/components/schemas/SitePageNavigationMenuSettings'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.PageSettings
      description: "Settings of the page, such as SEO or OpenGraph."
      xml:
        name: PageSettings
    ParentSitePage:
      type: object
      properties:
        friendlyUrlPath:
          type: string
          description: The relative URL of the parent page.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.ParentSitePage
      description: The parent page or null if it is a top level page.
      xml:
        name: ParentSitePage
    RenderedPage:
      type: object
      properties:
        masterPageId:
          type: string
          description: The ID of the master page used to render the content.
          readOnly: true
        masterPageName:
          type: string
          description: The name of the master page used to render the content.
        pageTemplateId:
          type: string
          description: The ID of the template used to render the content.
          readOnly: true
        pageTemplateName:
          type: string
          description: The name of the template used to render the content.
        renderedPageURL:
          type: string
          description: An absolute URL to the rendered page.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.RenderedPage
      description: Metadata of the page such as it's master page and template.
      xml:
        name: RenderedPage
    SEOSettings:
      type: object
      properties:
        customCanonicalURL:
          type: string
          description: "The canonical URL of the page, if it exists."
        customCanonicalURL_i18n:
          type: object
          additionalProperties:
            type: string
            description: "The localized canonical URL of the page, if it exists."
          description: "The localized canonical URL of the page, if it exists."
        description:
          type: string
          description: The page's description to be used as summary for search engines.
        description_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized descriptions of the page to be used as summary
              for search engines.
          description: The localized descriptions of the page to be used as summary
            for search engines.
        htmlTitle:
          type: string
          description: The page's main title to be used by search engines.
        htmlTitle_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized main titles of the page to be used by search
              engines.
          description: The localized main titles of the page to be used by search
            engines.
        robots:
          type: string
          description: A tag telling search engines if and how they should crawl the
            page.
        robots_i18n:
          type: object
          additionalProperties:
            type: string
            description: A localized tag telling search engines if and how they should
              crawl the page.
          description: A localized tag telling search engines if and how they should
            crawl the page.
        seoKeywords:
          type: string
          description: A list of target keywords of the page to be used by search
            engines.
        seoKeywords_i18n:
          type: object
          additionalProperties:
            type: string
            description: A list of localized target keywords of the page to be used
              by search engines.
          description: A list of localized target keywords of the page to be used
            by search engines.
        siteMapSettings:
          $ref: '#/components/schemas/SiteMapSettings'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SEOSettings
      description: The page's SEO settings.
      xml:
        name: SEOSettings
    Segment:
      required:
      - criteria
      - name
      type: object
      properties:
        active:
          type: boolean
          description: A flag that indicates whether the segment is active.
          readOnly: true
        criteria:
          type: string
          description: The segment's criteria.
          readOnly: true
        criteriaValue:
          type: object
          additionalProperties:
            type: object
            description: The segment's criteria in JSON.
          description: The segment's criteria in JSON.
          readOnly: true
        dateCreated:
          type: string
          description: The segment's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The segment's most recent modification date.
          format: date-time
          readOnly: true
        id:
          type: integer
          description: The segment's ID.
          format: int64
          readOnly: true
        name:
          type: string
          description: The segment's name.
          readOnly: true
        siteId:
          type: integer
          description: The ID of the segment's site.
          format: int64
          readOnly: true
        source:
          type: string
          description: The segment's source.
          readOnly: true
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.admin.user.dto.v1_0.Segment
      description: Represents a set of users that meet certain criteria. Segments
        may be used to create customized experiences for users.
      xml:
        name: Segment
      enum:
      - criteria
      - name
    Settings:
      type: object
      properties:
        colorSchemeName:
          type: string
          description: The page's color scheme name.
        css:
          type: string
          description: The page's CSS.
        favIcon:
          type: object
          description: The FavIcon of the page
        globalCSSClientExtensions:
          type: array
          description: The client extensions for global css associated to the page.
          items:
            $ref: '#/components/schemas/ClientExtension'
        globalJSClientExtensions:
          type: array
          description: The client extensions for global js associated to the page.
          items:
            $ref: '#/components/schemas/ClientExtension'
        javascript:
          type: string
          description: The page's JavaScript.
        masterPage:
          $ref: '#/components/schemas/MasterPage'
        styleBook:
          $ref: '#/components/schemas/StyleBook'
        themeCSSClientExtension:
          $ref: '#/components/schemas/ClientExtension'
        themeName:
          type: string
          description: The page's theme name.
        themeSettings:
          type: object
          description: The page's theme settings.
        themeSpritemapClientExtension:
          $ref: '#/components/schemas/ClientExtension'
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.Settings
      description: The page's settings.
      xml:
        name: Settings
    SiteMapSettings:
      type: object
      properties:
        include:
          type: boolean
          description: Whether search engines should crawl and index the page.
        includeChildSitePages:
          type: boolean
          description: Whether search engines should crawl and index the child pages.
        pagePriority:
          maximum: 1
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: false
          type: number
          description: How the page should be prioritized relative to other pages.
          format: double
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SiteMapSettings
        changeFrequency:
          type: string
          description: Indicates how often a page is updated.
          enum:
          - Always
          - Hourly
          - Daily
          - Weekly
          - Monthly
          - Yearly
          - Never
      description: Represents settings related with the site map.
      xml:
        name: SiteMapSettings
    SitePage:
      required:
      - title
      type: object
      properties:
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
              description: Block of actions allowed by the user making the request.
            description: Block of actions allowed by the user making the request.
          description: Block of actions allowed by the user making the request.
          readOnly: true
        aggregateRating:
          $ref: '#/components/schemas/AggregateRating'
        availableLanguages:
          type: array
          description: The list of languages the page has a translation for.
          readOnly: true
          items:
            type: string
            description: The list of languages the page has a translation for.
        creator:
          $ref: '#/components/schemas/Creator'
        customFields:
          type: array
          description: Custom fields associated with the page.
          items:
            $ref: '#/components/schemas/CustomField'
        dateCreated:
          type: string
          description: The page's creation date.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: The last time any field of the page was changed.
          format: date-time
          readOnly: true
        datePublished:
          type: string
          description: The page's most recent publication date.
          format: date-time
        experience:
          $ref: '#/components/schemas/Experience'
        friendlyUrlPath:
          type: string
          description: A relative URL to the page's rendered content.
        friendlyUrlPath_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized relative URLs to the page's rendered content.
          description: The localized relative URLs to the page's rendered content.
        id:
          type: integer
          description: The page ID.
          format: int64
          readOnly: true
        keywords:
          type: array
          description: A list of keywords describing the page.
          items:
            type: string
            description: A list of keywords describing the page.
        pageDefinition:
          $ref: '#/components/schemas/PageDefinition'
        pagePermissions:
          type: array
          description: The page's permissions.
          items:
            $ref: '#/components/schemas/PagePermission'
        pageSettings:
          $ref: '#/components/schemas/PageSettings'
        pageType:
          type: string
          description: The type of the page.
        parentSitePage:
          $ref: '#/components/schemas/ParentSitePage'
        renderedPage:
          $ref: '#/components/schemas/RenderedPage'
        siteId:
          type: integer
          description: The ID of the site to which this page is scoped.
          format: int64
          readOnly: true
        taxonomyCategoryBriefs:
          type: array
          description: The categories associated with this page.
          items:
            $ref: '#/components/schemas/TaxonomyCategoryBrief'
        taxonomyCategoryIds:
          type: array
          writeOnly: true
          items:
            type: integer
            format: int64
        title:
          type: string
          description: The page's title.
        title_i18n:
          type: object
          additionalProperties:
            type: string
            description: The localized page's titles.
          description: The localized page's titles.
        uuid:
          type: string
          description: A valid external identifier to reference this page.
          readOnly: true
        viewableBy:
          type: string
          writeOnly: true
          enum:
          - Anyone
          - Members
          - Owner
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SitePage
      description: Represents a site page. This is modeled internally as a `Layout`.
      xml:
        name: SitePage
    SitePageNavigationMenuSettings:
      type: object
      properties:
        queryString:
          type: string
          description: The default parameter for a page.
        target:
          type: string
          description: The page's description to be used as summary for search engines.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.SitePageNavigationMenuSettings
        targetType:
          type: string
          description: The target's type (specific frame or new tab).
          enum:
          - SpecificFrame
          - NewTab
      description: The page's site navigation menu settings.
      xml:
        name: SitePageNavigationMenuSettings
    StyleBook:
      type: object
      properties:
        key:
          type: string
          description: The stylebook's key.
        name:
          type: string
          description: The stylebook's name.
        x-class-name:
          type: string
          readOnly: true
          default: com.liferay.headless.delivery.dto.v1_0.StyleBook
      description: The StyleBook that is applied to the page.
      xml:
        name: StyleBook
    PageSitePage:
      type: object
      properties:
        totalCount:
          type: integer
          format: int64
        lastPage:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/SitePage'
        pageSize:
          type: integer
          format: int64
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        page:
          type: integer
          format: int64
        actions:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
    PageStructure:
      type: object
      properties:
        pageElement:
          $ref: "#/components/schemas/PageElement"
        pageRules:
          items:
            $ref: "#/components/schemas/PageRule"
          type: array
    PageVersion:
      type: object
      properties:
        experiences:
          items:
            $ref: "#/components/schemas/Experience"
          type: array
        settings:
          $ref: "#/components/schemas/Settings"